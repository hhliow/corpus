var dest0 = [];
var dest1 = [];
var dest2 = [];
var dest3 = [];

readCumulativeRegexpApplicationFromFile(
    'https://raw.githubusercontent.com/hhliow/middle_chinese/master/canonicalToPolyhedron.tsv', dest0);
readReplacementChainFromFile(
    'https://raw.githubusercontent.com/hhliow/middle_chinese/master/canonicalToPolyhedron.tsv', dest1);
pushFileContentToArray('https://raw.githubusercontent.com/rime/rime-middle-chinese/master/zyenpheng.dict.yaml', dest2);
pushFileContentToArray('https://raw.githubusercontent.com/hhliow/middle_chinese/master/canonicalForms.txt', dest3);

// wait until file loading completes.

var canonicalToPolyhedronCumulative = dest0[0];
var canonicalToPolyhedronReplacementChain = dest1[0];
var zyenpheng = dest2[0];
var canonicalForms = dest3[0];

canonicalForms = readArrayFromTsvString(canonicalForms).map(function(x) {return x[2]});
canonicalForms = canonicalForms.slice(1, canonicalForms.length);
//for (var i = canonicalForms.length - 1; i >= 0; i--) {
//  var s = canonicalForms[i];
//  if (/A$/.test(s)) {
//    canonicalForms.push(s.replace(/^(.*)A$/, '$1B'));
//  }
//}
//for (var i = canonicalForms.length - 1; i >= 0; i--) {
//  var s = canonicalForms[i];
//  canonicalForms.push(s.replace(/^(...)[上入]/, '$1平'));
//  canonicalForms.push(s.replace(/^(...)[平入]/, '$1上'));  
//  canonicalForms.push(s.replace(/^(...)./, '$1去'));
//}
canonicalForms = Array.from(new Set(canonicalForms));

zyenpheng = readArrayFromTsvString(zyenpheng).map(function(x) {return x[1]});
zyenpheng = zyenpheng.slice(15, zyenpheng.length);
var polyhedronSyllables = new Set(zyenpheng.filter(x => !/ /.test(x)));

var polyhedronToCanonical1 = getReverseFunction(canonicalForms, canonicalToPolyhedronCumulative);
var polyhedronToCanonical2 = getReverseFunction(canonicalForms, canonicalToPolyhedronReplacementChain);

var converted1 = polyhedronSyllables.map(polyhedronToCanonical);
var backConverted1 = converted.map(canonicalToPolyhedron);
var converted2 = polyhedronSyllables.map(polyhedronToCanonical2);
var backConverted2 = converted.map(canonicalToPolyhedronReplacementChain);

var correct1 = converted1.map((v, i) => v == polyhedronToCanonical[i]);
var correct2 = converted2.map((v, i) => v == polyhedronToCanonical[i]);

// Canonical from -> William Baxter, accumulative
/幫[AB]?$/ p
/滂[AB]?$/ ph
/並[AB]?$/ b
/明[AB]?$/ m		
/端$/ t
/透$/ th
/定$/ d
/泥$/ n		
/精$/ ts
/清$/ tsh
/從$/ dz
/心$/ s
/邪/ z
/知$/ tr
/徹$/ trh
/澄$/ dr
/娘$/ nr
/莊$/ tsr
/初$/ tsrh
/崇$/ dzr
/生$/ sr
/俟$/ zr
/章$/ tsy
/昌$/ tsyh
/常$/ dzy
/書$/ sy
/船$/ zy
/見[AB]?$/ k
/[溪谿][AB]?$/ kh
/[羣群][AB]?$/ g
/疑[AB]?$/ ng		
/影[AB]?$/ ʔ
/曉[AB]?$/ x
/[匣云]$/ h
/來$/ l
/以$/ y
/^..三.[^脂侵之臻真蒸][^章昌常日書船以]|^....[脂侵真].A/ j
/^[^遇流通咸]合/ w
/^..三.[^脂侵真].A/ i // 重紐A類
/^.三.[脂之侵真臻蒸幽]/ i // syllabic i
/^....[模虞侯尤文東]/ u // syllabic u
/^[果宕]|^....[泰豪談寒桓]/ a
/^..四|^..三.[祭支宵鹽仙清]/ e
/^....[魚咍灰廢覃元痕魂登冬鍾]/ o
/^....[麻夬肴銜嚴刪庚江]/ ae
/^....[皆佳咸山耕]/ ea
/^....[微欣]/ ɨ
/^....[咍皆灰泰夬祭廢齊脂微]/ j
/^[效流]/ w
/^[咸深]..[^入]/ m
/^[咸深]..入/ p
/^[山臻]..[^入]/ n
/^[山臻]..入/ t
/^[宕梗曾]..[^入]/ ng
/^[宕梗曾]..入/ k
/^[通江]..[^入]/ wng
/^[通江]..入/ wk
/^...上/ X
/^...去/ H

// Canonical from -> Phjong, accumulative
/幫[AB]?$/ p
/滂[AB]?$/ ph
/並[AB]?$/ b
/明[AB]?$/ m		
/[端知]$/ t
/[透徹]$/ th
/[定澄]$/ d
/[泥娘]$/ n	
/[精莊]$/ ts
/[清初]$/ tsh
/[從崇]$/ dz
/[心生]$/ s
/[邪俟]$/ z
/章$/ tc
/昌$/ ch
/常$/ dzh
/書$/ sh
/船$/ zh
/日$/ nj
/見[AB]?$/ k
/[溪谿][AB]?$/ kh
/[羣群][AB]?$/ g
/疑[AB]?$/ ng		
/影[AB]?$/ q
/曉[AB]?$/ h
/[匣云]$/ gh
/來$/ l
/[以A]$/ j
/^..二|[知徹澄娘莊初崇生俟]$/ r
/^[^流通]合..[^模魚]/ w
/^..三.[^之蒸]/ i // medial or syllabic i
/^..三.[之蒸]/ y
/^....[侯尤文東]/ u
/^[果宕]|^....[泰豪談寒桓元廢嚴]/ a
/^..四|^..三.[祭支宵鹽仙清]/ e
/^....[魚灰魂冬鍾江]/ o
/^....[咍覃痕登微欣]/ eo
/^....[麻夬肴銜刪庚]/ ae
/^....[皆佳咸山耕]/ ea
/^....[咍皆灰泰夬祭廢脂微]/ i // coda i
/^效|^....幽/ w
/^[咸深]..[^入]/ m
/^[咸深]..入/ p
/^[山臻]..[^入]/ n
/^[山臻]..入/ t
/^[宕梗曾通江]..[^入][^冬鍾]/ ng
/^[宕梗曾通江]..入[^冬鍾]/ k
/^...[^入][冬鍾]/ wng
/^...入[冬鍾]/ wk
/^...上/ x
/^...去/ h
